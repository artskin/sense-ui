/*stylus 变量*/
/*@import '../../style/var.styl';*/

//stylus 方法
buttonVariant(type,border){
  color:#fff;
  background-color:var(type,rgb(240,240,240));
  border-color:var(border);
  &:hover{
    background-color:var(type+-hover,rgb(230,230,230));
    border-color:var(border+-hover)
  }
  &:active{
    background-color:var(type+-active,rgb(220,220,220));
    border-color:var(border+-active)
  }
  &:focus{
    box-shadow:0 0 10px rgba(0,0,0,.3)
  }
}


:host([open]) button{
  color: red;
}
:host([ripple]) button{
  &::before{
    content:'';
    position: absolute;
    pointer-events: none;
    width: 200%;
    height 200%;
    border-radius: 50%;
    left : calc( var(--ripple-left) -50%);
    top  : calc( var(--ripple-top) -50%);
  }
  &::before{
    z-index:1;
    background-color: #fff;
    opacity :0;
    //transition: opacity 15ms linear 0s, background-color 15ms linear 0s;
    // transition-property: all;
    // transition-timing-function: linear;
    // transition-duration: 275ms;
    // transform:scale(0.1);
  }
  &:active{
    &::before{
      //opacity :0.3;
      transform:scale(0);
    }
  }
  &.animate{
    &::before{
      animation: ripple .5s linear;
    }
    
  }
  @keyframes ripple {
    0%{
      opacity :1;
    }
    100%{
      opacity :0;
      transform: scale(2)  
    }
  }
}

button{
  padding:0.8em 1.4em;
  border-width: 1px;
  border-style: solid;
  outline:none;
  border-radius:4px;
  display: inline-block;
  font-size: 14px;
  line-height: 1;
  slot{
    pointer-events: none;
  }
  overflow: hidden;
  position: relative;
}

.btn-default{
  buttonVariant(--default,--default)
  color: #999;
  &.is-wire{
    buttonVariant(--default-opacity,--default);
    color: #999;
  }
}
.btn-primary{
  buttonVariant(--primary,--primary)
  &.is-wire{
    buttonVariant(--primary-opacity,--primary);
    color: var(--primary)
  }
}
.btn-success{
  buttonVariant(--success,--success)
  &.is-wire{
    buttonVariant(--success-opacity,--success);
    color: var(--success)
  }
}
.btn-warning{
  buttonVariant(--warning,--warning)
  &.is-wire{
    buttonVariant(--warning-opacity,--warning);
    color: var(--warning)
  }
}
.btn-danger{
  buttonVariant(--danger,--danger)
  &.is-wire{
    buttonVariant(--danger-opacity,--danger);
    color: var(--danger)
  }
}

.btn-mini{
  padding:.4em .7em;
}
.btn-small{
  padding:.6em 1em;
}
.btn-big{
  padding:1em 2em;
}


//Boolean属性可直接通过样式实现
:host([disabled]) { /* style when host has disabled attribute. */
  /* background: grey; */
  pointer-events: none;
  opacity: 0.4;
}
:host([circle]) button,
:host([radius]) button{
  border-radius:3em;
}
:host([circle]) button{
  padding: 1em;
}